* APFCHECK
* Program to check your access to EVERYTHING
* --------------------------------------------------------------------
* For use on z/OS TSO only
CHKACCSS TITLE 'CATMAP on steroids'
         PRINT ON,DATA,GEN
CLEAR    CSECT
CLEAR    AMODE 31 
         YREGS                  # Register readability macro
*         SETUP registers and save areas thanks @bigendiansmalls      *
MAIN     BAKR  R14,0            # Save regs linkage stack
M1       LR    R9,R15           # R15 Program base into R13 for 
         USING MAIN,R9          # R13 for addressability
* Clear the screen
CLEARIT  STLINENO LINE=1,CLEAR=YES
ARGSEND  TPUT  MSGLIST6,L'MSGLIST6,EDIT
ARGRGRG  SR    R15,R15
* Start getting records from CSI
NEXTRCD  EQU   *
NXT1     LA    1,PARMLIST # Load Parmlist in to R1
NXT2     CALL  IGGCSI00   # Call the CSI utility
NXT3     LTR   15,15      # Is the return code zero?
NXT4     BZ    NORTCODE   # Yes it is branch
         CLC   PARMRC(4),FENTERR # No, Is it a field entry error?
         BE    NORTCODE   # Yes, branch
         MVC   RETDATA(4),PARMRC # No, welp fuck
         BAL   3,ERRCNVRT # Print the error msg
         B     ENDPRGM    # Exit program
* Now we check the return code for CSI
NORTCODE EQU   *
NORT1    USING DATARET,5
NORT2    LA    5,DATAAREA        # Put location of workarea in to R5
NORT3    L     1,DRETCD          # Put return code in R1
NORT4    LTR   1,1               # is return code zero?
NORT5    BZ    NEXTFLD           # No? Sweet
         MVC   RETDATA(4),DRETCD # Yes? Fuck print the error
         BAL   3,ERRCNVRT        # Print the error
         B     ENDPRGM           # Exit
* 
NEXTFLD  EQU *
NXTFLD1  LA    4,DATAEND
         LA    7,64
         USING ENTRY,4
NEXTENT  EQU   *
NXTENT1  TM    EFLAG,X'40' # Is the bit CSIENTER set?
         BO    ERRDET      # Yes, shit, we have an issue
         B     DATASET     # No Its cool lets do this
ERRDET   EQU   * Aww shit here we go again
         MVC   RETDATA(4),EERRCOD # put the error in RETDATA
         BAL   3,ERRCNVRT         # Convert and Print the error code
         LA    1,50               # Each entry is 50 get the next one
         AR    7,1                # ADD ENTRY DATA LEN
         AR    4,1                # ADD ENTRY DATA LEN
         C     7,DUSEDLEN         # COMPARE USED TO CALC LEN
         BNM   NEXTRESM                     IF GT OR EQ  RESUME TEST
         B     NEXTENT                      NEXT ENTRY 
DATASET  EQU   *
         MVC   OUTNAME(44),ENAME             MOVE NAME INFO
DATAPUT1 TPUT  OUTNAME,44,EDIT
         B     NEXTKEY                      CONTINUE   
* Get next entry
NEXTKEY  EQU   *
         SR    1,1                          CLEAR REG 1
         LH    1,EDATALN                    INSERT ENTRY DATA LEN
         LA    1,46(1)                      ADD ENTRY HDR LENGTH
         AR    7,1                          ADD ENTRY DATA LEN
         AR    4,1                          ADD ENTRY DATA LEN
         C     7,DUSEDLEN                   COMPARE USED TO CALC LEN
         BNM   NEXTRESM                     IF GT OR EQ  RESUME TEST
         B     NEXTENT                      NEXT ENTRY
* Get more records
NEXTRESM CLI   CSIRESUM,C'Y'     # Is this flag set?
         BE    NEXTRCD           # Yes, keep going
*                                  No, we're done
* We're done here, get the heck out
ENDPRGM  DS    0H           # We're done lets exit
         XR    R15,R15      # zero return code
         PR    ,            # Return to caller
* Print the error message
ERRCNVRT EQU *
         MVI   OUTPUT,C' '   # Blank out the first char of output1
         MVC   OUTPUT+1(131),OUTPUT # Blank out all of output
         SR    2,2           # Subtract R2 from R2 (zero out)
         IC    2,RETDATA+3   # Insert first char to R2
         CVD   2,DECIMAL     # Convert it to decimal
         UNPK  UNPKAREA(4),DECIMAL+6(2)  # CONVERT RETURN CODE
         OI    UNPKAREA+3,X'F0'  # Converted
         MVC   RTN(3),UNPKAREA+1 # put it somewhere
         SR    2,2               # CONVERT REASON CODE
         IC    2,RETDATA+2
         CVD   2,DECIMAL
         UNPK  UNPKAREA(4),DECIMAL+6(2)
         OI    UNPKAREA+3,X'F0'
         MVC   RSN(3),UNPKAREA+1
         MVC   MODIDO(2),RETDATA             MOVE MODULE ID
*         MVC   ERRENT,ENAME
         TPUT  ERRORMSG,L'ERRORMSG,EDIT 
         BR    3    
*
MSGLIST6 DC    C'*** Verbose Mode On'
* R1 PLIST
PARMLIST DS    0D
         DC    A(MODRSNRT)  # 4 bytes module, reason, and return code
         DC    A(CSIFIELD)  # Where our options are
         DC    A(DATAAREA)  # Where the data goes
* 4 bytes module, reason, and return code
MODRSNRT    DS 0F
PARMRC      DS 0CL4
MODID       DC XL2'0000'   # MODULE ID
RSNCODE     DC XL1'00'     # REASON CODE
RTNCODE     DC XL1'00'     # RETURN CODE
* CSI Options
* CSIFILTK is ** and CSICATNM all catalogs will be searched
* CSIDTYPS
* A - non-VSAM data set
* B - Generation data group
* C - Cluster
* G - Alternate index
* H - Generation data set
* L - Tape volume catalog library entry
* R - VSAM path
* U - User catalog connector entry
* W - Tape volume catalog volume entry
* X - Alias
* Z - Catalog control block data
CSIFIELD    DS 0F
CSIFILTK    DC CL44'**'    # Generic filter key
CSICATNM    DC CL44' '     # Catalog name or blanks
CSIRESNM    DC CL44' '     # RESUME
CSIDTYPD    DS 0CL16       # ENTRY TYPES
CSIDTYPS    DC CL16'A               '  # Entry types to be returned
CSIOPTS     DS 0CL4        # CSI OPTIONS
CSICLDI     DC CL1' '      # Cluster matching (no)
CSIRESUM    DC CL1' '      # RESUME FLAG
CSIS1CAT    DC CL1' '      # SEARCH ONLY 1 CATALOG (no)
CSIRESRV    DC XL1'00'     # RESERVED
CSINUMEN    DC H'1'        # NUMBER OF ENTRIES FOLLOWING
CSIENTS     DS 0CL8        # VARIABLE NUMBER OF ENTRIES FOLLOW
CSIFLDNM    DC CL8'CATTR   ' # FIELD NAME
* Other Stuff
FENTERR  DC    XL4'C6E20464' # Field entry code error
OUTPUT   DS    CL1
OUTPUTP1 DS    132CL1' '
OUTPUT1  DS    CL1
OUTPUT11 DS    132CL1' '
* Return data stuff
RETDATA  DC    F'0'
DECIMAL  DC    D'0'
UNPKAREA DC    XL4'0'
UNPK1    DC    XL11'0'
* Error MSG OUTPUT
ERRORMSG DS    0CL105
         DC    CL7' ENTRY '
ERRENT   DS    CL44
         DC    CL22' RECEIVED RETURN CODE '
RTN      DS    CL3
         DC    CL13' REASON CODE '
RSN      DS    CL3
         DC    CL11' MODULE ID '
MODIDO   DS    CL2
OUTNAME  DS    CL44 
DATAAREA DS    0F
         DC    F'65535'
         DS    XL65535
DATARET  DSECT
DWORKLEN DS    F
DREQLEN  DS    F
DUSEDLEN DS    F
DPFPLS   DS    H
DCATFLGS DS    CL1
DCATTYPE DS    CL1
DCATNAME DS    CL44
DRETCD   DS    0CL1
DMODID   DS    CL2
DRSNCOD  DS    CL1
DRETCOD  DS    CL1
DATAEND  DS    0F
ENTRY    DSECT
EFLAG    DS    XL1
ETYPE    DS    XL1
ENAME    DS    CL44
EERRCOD  DS    0XL4
EDATALN  DS    XL2
EFLD1LN  DS    XL2
EFLD2LN  DS    XL2
ECATTR   DS    XL1
ENTEND   DS    0XL1
         DROP  R9    # Drop Addressability
         END   MAIN  # Peace owt
